///Breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media screen and (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }
}

///General rules for the sites background
@mixin background-url($url) {
   background: url($url) no-repeat center center;
   background-attachment: fixed;
   background-size: cover;
}

///Rules for every flex-card on the site
@mixin flex-card{
  @extend %flex-card;
  @extend %flex-card-breakpoint;
}

///Targeting the flex cards from 3 to 4
@mixin flex-card-3-and-4{
   @extend %flex-card-3-and-4;
}

///Looping through the map $flex-colors and applying the colors to the selected element
@mixin loop-flex-colors{
   @for $i from 1 through length($flex-colors){
      &:nth-child(#{$i}){
         background-color: nth($flex-colors, $i);
      }
   }
}

///Makes a gradient color on the targeted element. $gradients can take unlimited arguments
@mixin linear-gradient($direction, $gradients...) {
  background-color: nth($gradients, 1);
  background-image: linear-gradient($direction, $gradients);
}

///Changes the class name from col-1 through col-4 and every increment of col adds a 25% width
@mixin for-loop($end){
   @for $i from 1 through $end{
      .col-#{$i}{
         width: 25% * $i;
      }
   }
}
